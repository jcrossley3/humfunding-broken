;; Analyzed by ClojureScript 1.8.40
{:use-macros {defvalidator bouncer.validators}, :excludes #{boolean}, :name bouncer.validators, :imports nil, :requires {f cljs-time.format, cljs-time.format cljs-time.format}, :uses nil, :defs {max-count {:name bouncer.validators/max-count, :file "target/cljsbuild/public/js/out/bouncer/validators.cljs", :line 187, :column 1, :end-line 187, :end-column 24, :meta {:file "/home/torysa/Workspace/humfunding/target/cljsbuild/public/js/out/bouncer/validators.cljs", :line 187, :column 15, :end-line 187, :end-column 24}}, every {:name bouncer.validators/every, :file "target/cljsbuild/public/js/out/bouncer/validators.cljs", :line 146, :column 1, :end-line 146, :end-column 20, :meta {:file "/home/torysa/Workspace/humfunding/target/cljsbuild/public/js/out/bouncer/validators.cljs", :line 146, :column 15, :end-line 146, :end-column 20}}, boolean {:name bouncer.validators/boolean, :file "target/cljsbuild/public/js/out/bouncer/validators.cljs", :line 96, :column 1, :end-line 96, :end-column 22, :meta {:file "/home/torysa/Workspace/humfunding/target/cljsbuild/public/js/out/bouncer/validators.cljs", :line 96, :column 15, :end-line 96, :end-column 22}}, required {:name bouncer.validators/required, :file "target/cljsbuild/public/js/out/bouncer/validators.cljs", :line 66, :column 1, :end-line 66, :end-column 23, :meta {:file "/home/torysa/Workspace/humfunding/target/cljsbuild/public/js/out/bouncer/validators.cljs", :line 66, :column 15, :end-line 66, :end-column 23}}, email {:name bouncer.validators/email, :file "target/cljsbuild/public/js/out/bouncer/validators.cljs", :line 162, :column 1, :end-line 162, :end-column 20, :meta {:file "/home/torysa/Workspace/humfunding/target/cljsbuild/public/js/out/bouncer/validators.cljs", :line 162, :column 15, :end-line 162, :end-column 20}}, number {:name bouncer.validators/number, :file "target/cljsbuild/public/js/out/bouncer/validators.cljs", :line 80, :column 1, :end-line 80, :end-column 21, :meta {:file "/home/torysa/Workspace/humfunding/target/cljsbuild/public/js/out/bouncer/validators.cljs", :line 80, :column 15, :end-line 80, :end-column 21}}, positive {:name bouncer.validators/positive, :file "target/cljsbuild/public/js/out/bouncer/validators.cljs", :line 121, :column 1, :end-line 121, :end-column 23, :meta {:file "/home/torysa/Workspace/humfunding/target/cljsbuild/public/js/out/bouncer/validators.cljs", :line 121, :column 15, :end-line 121, :end-column 23}}, custom {:name bouncer.validators/custom, :file "target/cljsbuild/public/js/out/bouncer/validators.cljs", :line 138, :column 1, :end-line 138, :end-column 21, :meta {:file "/home/torysa/Workspace/humfunding/target/cljsbuild/public/js/out/bouncer/validators.cljs", :line 138, :column 15, :end-line 138, :end-column 21}}, matches {:name bouncer.validators/matches, :file "target/cljsbuild/public/js/out/bouncer/validators.cljs", :line 154, :column 1, :end-line 154, :end-column 22, :meta {:file "/home/torysa/Workspace/humfunding/target/cljsbuild/public/js/out/bouncer/validators.cljs", :line 154, :column 15, :end-line 154, :end-column 22}}, string {:name bouncer.validators/string, :file "target/cljsbuild/public/js/out/bouncer/validators.cljs", :line 105, :column 1, :end-line 105, :end-column 21, :meta {:file "/home/torysa/Workspace/humfunding/target/cljsbuild/public/js/out/bouncer/validators.cljs", :line 105, :column 15, :end-line 105, :end-column 21}}, member {:name bouncer.validators/member, :file "target/cljsbuild/public/js/out/bouncer/validators.cljs", :line 130, :column 1, :end-line 130, :end-column 21, :meta {:file "/home/torysa/Workspace/humfunding/target/cljsbuild/public/js/out/bouncer/validators.cljs", :line 130, :column 15, :end-line 130, :end-column 21}}, in-range {:name bouncer.validators/in-range, :file "target/cljsbuild/public/js/out/bouncer/validators.cljs", :line 113, :column 1, :end-line 113, :end-column 23, :meta {:file "/home/torysa/Workspace/humfunding/target/cljsbuild/public/js/out/bouncer/validators.cljs", :line 113, :column 15, :end-line 113, :end-column 23}}, integer {:name bouncer.validators/integer, :file "target/cljsbuild/public/js/out/bouncer/validators.cljs", :line 88, :column 1, :end-line 88, :end-column 22, :meta {:file "/home/torysa/Workspace/humfunding/target/cljsbuild/public/js/out/bouncer/validators.cljs", :line 88, :column 15, :end-line 88, :end-column 22}}, min-count {:name bouncer.validators/min-count, :file "target/cljsbuild/public/js/out/bouncer/validators.cljs", :line 195, :column 1, :end-line 195, :end-column 24, :meta {:file "/home/torysa/Workspace/humfunding/target/cljsbuild/public/js/out/bouncer/validators.cljs", :line 195, :column 15, :end-line 195, :end-column 24}}, datetime {:name bouncer.validators/datetime, :file "target/cljsbuild/public/js/out/bouncer/validators.cljs", :line 173, :column 1, :end-line 173, :end-column 23, :meta {:file "/home/torysa/Workspace/humfunding/target/cljsbuild/public/js/out/bouncer/validators.cljs", :line 173, :column 15, :end-line 173, :end-column 23}}}, :require-macros {bouncer.validators bouncer.validators}, :cljs.analyzer/constants {:seen #{:bouncer.validators/max-count :bouncer.validators/number :else :validator :bouncer.validators/matches :bouncer.validators/string :bouncer.validators/member :bouncer.validators/in-range :bouncer.validators/email :bouncer.validators/custom :bouncer.validators/datetime :bouncer.validators/min-count :optional :bouncer.validators/positive :bouncer.validators/integer :bouncer.validators/required :bouncer.validators/boolean :default-message-format :bouncer.validators/every}, :order [:optional :default-message-format :validator :bouncer.validators/required :bouncer.validators/number :bouncer.validators/integer :bouncer.validators/boolean :bouncer.validators/string :bouncer.validators/in-range :bouncer.validators/positive :bouncer.validators/member :bouncer.validators/custom :bouncer.validators/every :bouncer.validators/matches :bouncer.validators/email :else :bouncer.validators/datetime :bouncer.validators/max-count :bouncer.validators/min-count]}, :doc "This namespace contains all built-in validators as well as\n          macros for defining new validators and validator sets"}